[gd_scene load_steps=8 format=3 uid="uid://cd0qndcath1f4"]

[ext_resource type="Texture2D" uid="uid://c884e3ei0y8l6" path="res://addons/kenney_particle_pack/magic_05.png" id="1_qyofq"]

[sub_resource type="SphereMesh" id="SphereMesh_r3c1v"]
radius = 0.3
height = 0.6

[sub_resource type="SphereShape3D" id="SphereShape3D_uw857"]
radius = 0.3

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_ur7f3"]
emission_shape = 2
emission_sphere_radius = 0.5
direction = Vector3(0, 0, 0)
gravity = Vector3(0, -4, 0)
angular_velocity_max = 1000.0
scale_min = 0.5
scale_max = 2.0

[sub_resource type="Shader" id="Shader_sbf4p"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.1.1.stable.mono's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}






void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	ALPHA *= albedo.a * albedo_tex.a;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_7ghix"]
render_priority = 0
shader = SubResource("Shader_sbf4p")
shader_parameter/albedo = Color(1, 0.164706, 1, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = ExtResource("1_qyofq")

[sub_resource type="SphereMesh" id="SphereMesh_1ftt0"]
material = SubResource("ShaderMaterial_7ghix")
radius = 0.25
height = 0.5

[node name="ball" type="RigidBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 7.30112, 0)

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("SphereMesh_r3c1v")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("SphereShape3D_uw857")

[node name="GPUParticles3D" type="GPUParticles3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.0178846, 0, 0.00121856)
amount = 10
preprocess = 1.0
explosiveness = 0.5
visibility_aabb = AABB(-1, -1, -1, 2, 2, 2)
process_material = SubResource("ParticleProcessMaterial_ur7f3")
draw_pass_1 = SubResource("SphereMesh_1ftt0")
